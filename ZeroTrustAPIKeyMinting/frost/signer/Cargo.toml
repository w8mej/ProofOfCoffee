# frost-signer/Cargo.toml
#
# ===========================
# Security & Ops Notes
# ===========================
# - Uses rustls (memory-safe TLS) with client cert verification for **mTLS**.
# - Axum as the HTTP server; restrict exposure via NetworkPolicies and private subnets.
# - JWT validation with `jsonwebtoken`; prefer RS256/EdDSA & JWKS in production.
# - Keep Cargo.lock checked in; pin versions to reduce supply-chain drift; run cargo-audit in CI.
#
# ===========================
# Tunables / Config
# ===========================
# - This service reads KeyPackage from `${FROST_STATE}/signer-<id>/share.json`.
# - TLS material comes from mounted files under `/tls` (cert-manager or external secrets).
# - JWT secret from env for PoC; use file mount or RS256/EdDSA in production.
#
# ===========================
# Improvements / Production
# ===========================
# - Add structured error handling (this crate already logs; extend with error codes if needed).
# - Add request rate limiting, dedicated error counters per failure mode.
# - Add SPIFFE/SAN pinning for the coordinator client cert.

[package]
name = "frost-signer"
version = "0.1.0"
edition = "2021"

[dependencies]
# HTTP server
axum = "0.7"

# JSON (serde derive + value)
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Async runtime
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["fmt", "env-filter"] }

# FROST Ed25519 primitives
frost-ed25519 = "0.7"

# RNGs if/when needed for expansions (not used in round-2, but kept for parity)
rand_core = "0.6"
rand_chacha = "0.3"

# Error ergonomics
anyhow = "1.0"

# Base64 encode/decode for RPC payloads
base64 = "0.22"

# Metrics
prometheus = "0.13"
lazy_static = "1"

# TLS (rustls + tokio integration) and JWT verification
rustls = { version = "0.23", default-features = false, features = ["ring", "std"] }
tokio-rustls = "0.25"
jsonwebtoken = "9"