permissions:
  contents: read
  packages: write   # only where image push is required; remove in workflows that don't push
  
name: poc-ci

on:
  push:
    branches: ["poc", "poc/**"]
  pull_request:
    branches: ["poc", "poc/**"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
      - name: Run tests
        run: python -m pytest -q

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/mpc-minting:${{ github.sha }} .

      - name: Login GHCR
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        if: github.event_name == 'push'
        run: |
          docker tag ghcr.io/${{ github.repository_owner }}/mpc-minting:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/mpc-minting:latest
          docker push ghcr.io/${{ github.repository_owner }}/mpc-minting:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/mpc-minting:latest

  terraform-validate:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/terraform
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Terraform fmt
        run: terraform fmt -check -recursive
      - name: Terraform init
        run: terraform init -input=false
      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan (dry-run)
        env:
          TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
          TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
          TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key_path: "/home/runner/.oci/oci_api_key.pem"
          TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_OCID }}
          TF_VAR_region: ${{ secrets.OCI_REGION }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUB_KEY }}
          TF_VAR_image_ocid: ${{ secrets.OCI_IMAGE_OCID }}
        run: |
          mkdir -p /home/runner/.oci
          echo "${{ secrets.OCI_API_PRIVATE_KEY_PEM }}" > /home/runner/.oci/oci_api_key.pem
          chmod 600 /home/runner/.oci/oci_api_key.pem
          terraform plan -out plan.out -input=false || true
      - name: Upload plan
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan
          path: infra/terraform/plan.out
