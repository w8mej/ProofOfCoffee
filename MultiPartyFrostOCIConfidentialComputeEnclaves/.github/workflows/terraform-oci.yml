# -----------------------------------------------------------------------------
# File: .github/workflows/terraform-oci.yml
# What it does:
#   Terraform plan/apply to provision **OCI Confidential VMs** running the four
#   services as containers. Designed to be triggered manually (workflow_dispatch)
#   or on pushes to the POC branch.
#
# Security & Ops notes:
#   - Use OpenID Connect or short-lived keys for OCI auth; avoid long-lived keys.
#   - Store sensitive vars (tenancy_ocid, user_ocid, key, etc.) in encrypted secrets.
#   - Consider a separate workspace per environment.
# -----------------------------------------------------------------------------
name: terraform-oci

on:
  workflow_dispatch:
  push:
    branches: [ "poc" ]

permissions:
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/oci

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        env:
          TF_VAR_tenancy_ocid:     ${{ secrets.OCI_TENANCY_OCID }}
          TF_VAR_user_ocid:        ${{ secrets.OCI_USER_OCID }}
          TF_VAR_fingerprint:      ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key_path: /home/runner/.oci/oci_api_key.pem
          TF_VAR_region:           ${{ secrets.OCI_REGION }}
          TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_OCID }}
          TF_VAR_subnet_ocid:      ${{ secrets.OCI_SUBNET_OCID }}
          TF_VAR_shape:            ${{ secrets.OCI_SHAPE }}
          TF_VAR_image_ocid:       ${{ secrets.OCI_IMAGE_OCID }}
          TF_VAR_registry:         ghcr.io
          TF_VAR_image_repo:       ${{ github.repository }}
          TF_VAR_image_tag:        ci-${{ github.run_id }}
          TF_VAR_tee_policy_hash:  ${{ secrets.TEE_POLICY_HASH }}
        run: |
          mkdir -p /home/runner/.oci
          printf "%s" "${{ secrets.OCI_API_PRIVATE_KEY_PEM }}" > /home/runner/.oci/oci_api_key.pem
          chmod 600 /home/runner/.oci/oci_api_key.pem
          terraform init -input=false

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply (auto-approve on POC branch)
        if: github.ref == 'refs/heads/poc'
        run: terraform apply -auto-approve -input=false
