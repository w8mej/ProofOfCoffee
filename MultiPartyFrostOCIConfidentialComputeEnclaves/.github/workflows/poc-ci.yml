# -----------------------------------------------------------------------------
# File: .github/workflows/poc-ci.yml
# What it does:
#   CI for the **proof-of-concept** branch only. Validates proto generation,
#   installs deps, builds Docker images, scans them, generates SBOMs, and
#   performs **keyless Cosign signing + attestation** (using GitHub OIDC).
#
# Security & Ops notes:
#   - Keyless signing ties signatures to GitHub identities via OIDC.
#   - SBOM & vulnerability scan provide supply-chain visibility.
#   - Pin action SHAs in high-security environments.
#
# Trigger:
#   - Only on branch 'poc' (rename below if you use a different POC branch).
# -----------------------------------------------------------------------------
name: poc-ci

on:
  push:
    branches: [ "poc" ]
  pull_request:
    branches: [ "poc" ]

permissions:
  contents: read
  id-token: write   # required for Cosign keyless
  packages: write   # required if pushing to GHCR

env:
  REGISTRY: ghcr.io
  IMAGE_REPO: ${{ github.repository }}
  TAG: ci-${{ github.run_id }}

jobs:
  build-scan-sign:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate protobufs
        run: |
          python -m grpc_tools.protoc -I proto proto/mpc.proto --python_out=gen --grpc_python_out=gen

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build images
        run: |
          docker build -f Dockerfile.coordinator -t $REGISTRY/$IMAGE_REPO/mpc-coordinator:$TAG .
          docker build -f Dockerfile.ca          -t $REGISTRY/$IMAGE_REPO/mpc-ca:$TAG          .
          docker build -f Dockerfile.tlog        -t $REGISTRY/$IMAGE_REPO/mpc-tlog:$TAG        .
          docker build -f Dockerfile.auth        -t $REGISTRY/$IMAGE_REPO/mpc-auth:$TAG        .

      - name: Push images
        run: |
          docker push $REGISTRY/$IMAGE_REPO/mpc-coordinator:$TAG
          docker push $REGISTRY/$IMAGE_REPO/mpc-ca:$TAG
          docker push $REGISTRY/$IMAGE_REPO/mpc-tlog:$TAG
          docker push $REGISTRY/$IMAGE_REPO/mpc-auth:$TAG

      # --- Security: vulnerability scan ---
      - name: Install Trivy
        uses: aquasecurity/setup-trivy@v0.2.2
      - name: Trivy scan (Coordinator)
        run: trivy image --severity HIGH,CRITICAL --exit-code 1 $REGISTRY/$IMAGE_REPO/mpc-coordinator:$TAG
      - name: Trivy scan (CA)
        run: trivy image --severity HIGH,CRITICAL --exit-code 1 $REGISTRY/$IMAGE_REPO/mpc-ca:$TAG
      - name: Trivy scan (TLog)
        run: trivy image --severity HIGH,CRITICAL --exit-code 1 $REGISTRY/$IMAGE_REPO/mpc-tlog:$TAG
      - name: Trivy scan (Auth)
        run: trivy image --severity HIGH,CRITICAL --exit-code 1 $REGISTRY/$IMAGE_REPO/mpc-auth:$TAG

      # --- Supply chain: SBOM + Cosign sign & attest ---
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.6.0
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0.17.7

      - name: Generate SBOMs (SPDX JSON)
        run: |
          syft packages $REGISTRY/$IMAGE_REPO/mpc-coordinator:$TAG -o spdx-json > sbom-coordinator.spdx.json
          syft packages $REGISTRY/$IMAGE_REPO/mpc-ca:$TAG          -o spdx-json > sbom-ca.spdx.json
          syft packages $REGISTRY/$IMAGE_REPO/mpc-tlog:$TAG        -o spdx-json > sbom-tlog.spdx.json
          syft packages $REGISTRY/$IMAGE_REPO/mpc-auth:$TAG        -o spdx-json > sbom-auth.spdx.json

      - name: Cosign sign images (keyless)
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          cosign sign --yes $REGISTRY/$IMAGE_REPO/mpc-coordinator:$TAG
          cosign sign --yes $REGISTRY/$IMAGE_REPO/mpc-ca:$TAG
          cosign sign --yes $REGISTRY/$IMAGE_REPO/mpc-tlog:$TAG
          cosign sign --yes $REGISTRY/$IMAGE_REPO/mpc-auth:$TAG

      - name: Cosign attest SBOMs
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          cosign attest --yes --type spdx --predicate sbom-coordinator.spdx.json $REGISTRY/$IMAGE_REPO/mpc-coordinator:$TAG
          cosign attest --yes --type spdx --predicate sbom-ca.spdx.json          $REGISTRY/$IMAGE_REPO/mpc-ca:$TAG
          cosign attest --yes --type spdx --predicate sbom-tlog.spdx.json        $REGISTRY/$IMAGE_REPO/mpc-tlog:$TAG
          cosign attest --yes --type spdx --predicate sbom-auth.spdx.json        $REGISTRY/$IMAGE_REPO/mpc-auth:$TAG
